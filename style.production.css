/*
Colors Used

Text Color (Black): #111111
Primary Color (GhostWhite): #F8F8FF 
Secondary Color (Gray): #6e6e6e
Button Color: #2b2b2b
*/

/*
Font stylings for future reference

font-weight: bold;
font-style: italic;
font-variant: small-caps;
text-decoration: underline;
*/

/* Global Variables */
  
* {
    box-sizing: border-box;
}

body {
    font-family: 'Spartan', sans-serif;
    font-weight: 400px;
    font-size: 16px;
    line-height: 1.6
}

main {
    padding: 20px;
}

h1 {
    font-size: 30px;
    font-weight: 700;
}

h2 {
    font-size: 24px;
    font-weight: 900;
}
 
h3 {
    font-size: 18px;
    font-weight: 900;
}

a {
    color:#357b70;
}

a:hover {
    /*No underlining when hovering over a link */
    text-decoration: none;
}

a:visited {
    /* selected link */
    color: #357b70;
}

a:active {
    /* selected link */
    color: #e0b354;
}

button, .button, input[type="submit"] {
    /* overwrites browser defaults and resets the border */
    border: none;
    /* takes the font from the outer container */
    font-family: inherit;
    /* styles the background color, font color, and text decoration (underline, etc.) of the button */
    background-color: #c7c8c9;
    color: white;
    text-decoration: none;
    /*adds spacing to the button (this will be discussed more in-depth later) */
    padding: 10px;
    border-radius: 3px;
    /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    transition: 0.2s opacity;
  }
  
  button:hover, button:focus, .button:hover, .button:focus, input[type="submit"]:hover, input[type="submit"]:focus {
    /* lets the mouse appear as a hand when hovering over the button */
    cursor: pointer;
    /* reduces the opacity of the button to 80% */
    opacity: 0.8;
  }

.profile {
    max-width: 700px;
    margin: 0 auto;
}

.profile__text {
    flex: 1 1 100px;
}

.profile__portrait {
    float: left;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.page-header {
    display: flex;
    width: 100%;
    padding: 20px;
    border-bottom: 1px solid lightgray;
}

.page-header__item {
    flex: 0 1 200px;
}

.page-header__item:last-child {
    flex-grow: 1;
    text-align: right;
}

.navigation-list {
    list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;  
}

.page-footer {
    clear:both;
    display: flex;
    flex-direction: column;
    text-align: center;
}

.center {
    max-width: 700px;
    margin: 0 auto;
    text-align: center;
}

/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
   }
   /* end grid fallback */
   
   @supports (display: grid) {
    .grid {
      display: grid;
      /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
      grid-template-columns: 1fr 1fr 1fr;
      grid-gap: 20px;
      margin: 0;

    }
    .grid__item {
      background-color: #c7c8c9;
      width: auto;
      min-height: auto;
      margin: 0;
      padding:20px;
    }
    .grid__item:last-child {
      grid-column: 3 / 3;
      grid-row: 1 / 3;
    }
}  

@media all and (max-width: 500px) {
    .grid {
        grid-template-columns: 1fr;
    }
}

@media all and (min-width: 500px) and (max-width: 750px) {
    .grid {
        grid-template-columns: 1fr 1fr;
    }
}

@media all and (max-width: 750px) {
    .grid {
        grid-gap: 10px;
    }
    .grid__item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }
    h1 {
        font-size: 22px;
    }
}

/* changing sun color */
@keyframes color-change {
    0% {
        fill: #edc655;
    }
    50% {
        fill: #fcffad;
    }
    100% {
        fill: #f76414;
    }
}

.sun {
    animation-duration: 4s;
    animation-name: color-change;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

.sun {
    animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
    from {
        transform: translate(0, 50px);
    }
    to {
        transform: translate(200px, 50px);
    }
}

.cloud-front {
    animation-duration: 30s;
    animation-name: cloud-move;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear; 
}

.cloud-front {
    animation: 30s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
    from {
        transform: translate(446px, 48px);
    }
    to {
        transform: translate(100px, 48px);
    }
}

.cloud-back {
    animation: 34s cloud-move-reverse infinite alternate linear;
}